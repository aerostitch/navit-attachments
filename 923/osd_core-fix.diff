Index: navit/osd/core/osd_core.c
===================================================================
--- navit/osd/core/osd_core.c	(Revision 4677)
+++ navit/osd/core/osd_core.c	(Arbeitskopie)
@@ -243,7 +243,7 @@
 	) {
 		struct attr attr_to_set;
 		struct osd* osd;
-		
+		int t = 0;
 		if(ATTR_IS_STRING(attr_from_name(in[1]->u.str))) {
 			attr_to_set.u.str = in[2]->u.str;
 			attr_to_set.type = attr_from_name(in[1]->u.str);
@@ -251,16 +251,33 @@
 		else if(ATTR_IS_INT(attr_from_name(in[1]->u.str))) {
 			attr_to_set.u.num = atoi(in[2]->u.str);
 			attr_to_set.type = attr_from_name(in[1]->u.str);
+			t = 1;
 		}
 		else if(ATTR_IS_DOUBLE(attr_from_name(in[1]->u.str))) {
 			double* val = g_new0(double,1);
 			*val = atof(in[2]->u.str);
 			attr_to_set.u.numd = val;
 			attr_to_set.type = attr_from_name(in[1]->u.str);
+			t = 2;
 		}
 		osd = osd_get_osd_by_name(in[0]->u.str);
-		if(osd) { 
-			osd_set_attr(osd, &attr_to_set);
+		if(osd) {
+			struct attr old_attr;
+			if (osd_get_attr(osd, attr_to_set.type, &old_attr, NULL)) {
+				int changed = 0;
+				switch(t) {
+				case 0:
+					changed = (strcmp(old_attr.u.str, attr_to_set.u.str) != 0);
+					break;
+				case 1:
+					changed = (old_attr.u.num != attr_to_set.u.num);
+					break;
+				case 2:
+					changed = (*old_attr.u.numd != *attr_to_set.u.numd);
+					break;
+				}
+				if (changed) osd_set_attr(osd, &attr_to_set);
+			}
 			val->u.num  = 1;
 		}
 	}
