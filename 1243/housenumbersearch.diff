Index: navit/navit/map/binfile/binfile.c
===================================================================
--- navit/navit/map/binfile/binfile.c	(revision 5878)
+++ navit/navit/map/binfile/binfile.c	(working copy)
@@ -131,6 +131,9 @@
 	struct map_download *download;
 	int redirect;
 	long download_enabled;
+	int last_searched_town_id_hi;	//!< For housenumbersearch
+	int last_searched_town_id_lo;
+
 };
 
 struct map_rect_priv {
@@ -2056,19 +2059,24 @@
 			town = map_rect_get_item_byid_binfile(map_rec, item->id_hi, item->id_lo);
 			if (town) {
 				struct coord c;
-
 				if (binmap_search_by_index(map, town, &msp->mr))
 					msp->mode = 1;
 				else {
 					if (item_coord_get(town, &c, 1)) {
-						if ((msp->mr=binmap_search_street_by_place(map, town, &c, &msp->ms, &msp->boundaries)))
+						if ((msp->mr=binmap_search_street_by_place(map, town, &c, &msp->ms, &msp->boundaries))) {
 							msp->mode = 2;
+							map->last_searched_town_id_hi = town->id_hi;
+							map->last_searched_town_id_lo = town->id_lo;
+						}
 						else {
 							msp->mr=binmap_search_street_by_estimate(map, town, &c, &msp->ms);
 							msp->mode = 3;
+							map->last_searched_town_id_hi = 0;
+							map->last_searched_town_id_lo = 0;
 						}
 					}
 				}
+
 				map_rect_destroy_binfile(map_rec);
 				if (!msp->mr)
 					break;
@@ -2093,7 +2101,15 @@
 				if (item_coord_get(msp->item, &c, 1))
 				{
 					struct attr attr;
-					msp->mr=binmap_search_housenumber_by_estimate(map, &c, &msp->ms);
+
+					if (map->last_searched_town_id_hi > 0 && map->last_searched_town_id_lo > 0){
+					map_rec = map_rect_new_binfile(map, NULL);
+					town = map_rect_get_item_byid_binfile(map_rec, map->last_searched_town_id_hi, map->last_searched_town_id_lo);
+					msp->mr = binmap_search_street_by_place(map, town, &c, &msp->ms, &msp->boundaries);
+					map_rect_destroy_binfile(map_rec);
+					}
+
+					else msp->mr=binmap_search_housenumber_by_estimate(map, &c, &msp->ms);
 					msp->mode = 2;
 					msp->rect_new=msp->ms.u.c_rect;
 					if(item_attr_get(msp->item, attr_street_name, &attr))
@@ -2316,17 +2332,22 @@
 				break;
 			case attr_house_number:
 				has_house_number=binfile_attr_get(it->priv_data, attr_house_number, &at);
-				if (has_house_number || it->type == type_house_number
+				if ((has_house_number || it->type == type_house_number
 					|| it->type == type_house_number_interpolation_even || it->type == type_house_number_interpolation_odd
 					|| it->type == type_house_number_interpolation_all
-					|| (map_search->mode == 1 && item_is_street(*it))
-				   	)
+					|| (map_search->mode == 1 && item_is_street(*it)))
+				   	 && !(map_search->boundaries && !item_inside_poly_list(it,map_search->boundaries))
+				   	 )
 				{
 					if (has_house_number)
 					{
+
 						struct attr at2;
-						if ( (map_search->mode!=2 || binfile_attr_get(it->priv_data, attr_street_name, &at2)) && !linguistics_compare(at.u.str, map_search->search.u.str, mode))
+						if ( (map_search->mode!=2 || binfile_attr_get(it->priv_data, attr_street_name, &at2)) && !linguistics_compare(at.u.str, map_search->search.u.str, mode)
+								&& !strcmp(at2.u.str, map_search->parent_name))
 						{
+							dbg(0,"straat naam %s, huisnr  %s \n",at2.u.str, at.u.str );
+
 							if (!duplicate(map_search, it, attr_house_number))
 							{
 								binfile_attr_rewind(it->priv_data);
@@ -2337,6 +2358,7 @@
 						return it;
 				} else if(map_search->mode==2 && map_search->parent_name && item_is_street(*it) && binfile_attr_get(it->priv_data, attr_street_name, &at) && !strcmp(at.u.str, map_search->parent_name) ) {
 					/* If matching street segment found, prepare to expand house number search region +100m around each way point */
+					if (!(map_search->boundaries))  {
 					struct coord c;
 					while(item_coord_get(it,&c,1)) {
 						c.x-=100;
@@ -2346,6 +2368,7 @@
 						c.y+=200;
 						coord_rect_extend(&map_search->rect_new,&c);
 					}
+				  }
 				}
 				continue;
 			default:

