Index: binding_dbus.c
===================================================================
--- binding_dbus.c	(revision 1424)
+++ binding_dbus.c	(working copy)
@@ -26,6 +26,7 @@
 #include "main.h"
 #include "navit.h"
 #include "coord.h"
+#include "point.h"
 #include "plugin.h"
 #include "debug.h"
 #include "item.h"
@@ -168,6 +169,7 @@
 
 	return empty_reply(connection, message);
 }
+
 static int
 pcoord_get_from_message(DBusMessage *message, struct pcoord *pc)
 {
@@ -191,9 +193,47 @@
 	dbus_message_iter_next(&iter2);
 	if (dbus_message_iter_get_arg_type(&iter2) != DBUS_TYPE_INVALID)
 		return 0;
+    dbg(0, " pro -> %i x -> %i y -> %i\n", &pc->pro, &pc->x, &pc->y);
 	return 1;
 }
 
+static int
+point_get_from_message(DBusMessage *message, DBusMessageIter *iter, struct point *p)
+{
+    DBusMessageIter iter2;
+
+	dbg(0,"%s\n", dbus_message_iter_get_signature(iter));
+	
+    // iterate into (ii) with iter2
+    dbus_message_iter_recurse(iter, &iter2);
+
+	// get x
+    if (dbus_message_iter_get_arg_type(&iter2) != DBUS_TYPE_INT32)
+		return 0;
+	dbus_message_iter_get_basic(&iter2, &p->x);
+    // got x
+	
+    // process to the next value
+    dbus_message_iter_next(&iter2);
+    
+    // get y
+	if (dbus_message_iter_get_arg_type(&iter2) != DBUS_TYPE_INT32)
+		return 0;
+	dbus_message_iter_get_basic(&iter2, &p->y);
+    // got y
+
+    dbg(0, " x -> %i  y -> %i\n", p->x, p->y);
+	
+    // a final test if that was the last value
+    dbus_message_iter_next(&iter2);
+
+	if (dbus_message_iter_get_arg_type(&iter2) != DBUS_TYPE_INVALID)
+		return 0;
+	
+    // everything went right :D
+	return 1;
+}
+
 static DBusHandlerResult
 request_navit_set_center(DBusConnection *connection, DBusMessage *message)
 {
@@ -209,6 +249,40 @@
 }
 
 static DBusHandlerResult
+request_navit_zoom_in(DBusConnection *connection, DBusMessage *message)
+{
+	int factor;
+    struct point p;
+	struct navit *navit;
+	DBusMessageIter iter;
+
+	navit=object_get_from_message(message, "navit");
+	if (! navit)
+		return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
+
+	dbus_message_iter_init(message, &iter);
+	dbg(0,"%s\n", dbus_message_iter_get_signature(&iter));
+	
+    // get zoom factor
+    dbus_message_iter_get_basic(&iter, &factor);
+    
+    // check if there's also a point given
+    if (!dbus_message_iter_has_next(&iter))
+    {
+        navit_zoom_in(navit, factor, NULL);
+	    return empty_reply(connection, message);
+    }
+
+    dbus_message_iter_next(&iter);
+    if (!point_get_from_message(message, &iter, &p))
+        return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
+    
+    navit_zoom_in(navit, factor, &p);
+	return empty_reply(connection, message);
+
+}
+
+static DBusHandlerResult
 request_navit_set_layout(DBusConnection *connection, DBusMessage *message)
 {
 	char *new_layout_name;
@@ -233,7 +307,7 @@
 static DBusHandlerResult
 navit_handler_func(DBusConnection *connection, DBusMessage *message, void *user_data)
 {
-	dbg(0,"type=%s interface=%s path=%s member=%s signature=%s\n", dbus_message_type_to_string(dbus_message_get_type(message)), dbus_message_get_interface(message), dbus_message_get_path(message), dbus_message_get_member(message), dbus_message_get_signature(message));
+	dbg(0,"\n\ttype=%s\n\tinterface=%s\n\tpath=%s\n\tmember=%s\n\tsignature=%s\n", dbus_message_type_to_string(dbus_message_get_type(message)), dbus_message_get_interface(message), dbus_message_get_path(message), dbus_message_get_member(message), dbus_message_get_signature(message));
 #if 0
 	if (dbus_message_is_method_call (message, "org.freedesktop.DBus.Introspectable", "Introspect")) {
 		DBusMessage *reply;
@@ -262,6 +336,12 @@
 	if (dbus_message_is_method_call (message, "org.navit_project.navit.navit", "set_center") &&
 		dbus_message_has_signature(message,"(iii)")) 
 		return request_navit_set_center(connection, message);
+	if (dbus_message_is_method_call (message, "org.navit_project.navit.navit", "zoom_in") &&
+		dbus_message_has_signature(message, "i(ii)")) 
+		return request_navit_zoom_in(connection, message);
+	if (dbus_message_is_method_call (message, "org.navit_project.navit.navit", "zoom_in") &&
+		dbus_message_has_signature(message, "i")) 
+		return request_navit_zoom_in(connection, message);
 	if (dbus_message_is_method_call (message, "org.navit_project.navit.navit", "set_layout") &&
 		dbus_message_has_signature(message,"s")) 
 		return request_navit_set_layout(connection, message);
