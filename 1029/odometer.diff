Index: /home/navit/_navit_develop/work/navit_repo/navit/navit/osd/core/osd_core.c
===================================================================
--- /home/navit/_navit_develop/work/navit_repo/navit/navit/osd/core/osd_core.c	(revision 5065)
+++ /home/navit/_navit_develop/work/navit_repo/navit/navit/osd/core/osd_core.c	(working copy)
@@ -521,15 +521,22 @@
 osd_cmd_odometer_reset(struct navit *this, char *function, struct attr **in, struct attr ***out, int *valid)
 {
 	if (in && in[0] && ATTR_IS_STRING(in[0]->type) && in[0]->u.str) {
-          GList* list = odometer_list;
-          while(list) {
-            if(!strcmp(((struct odometer*)((struct osd_priv_common *)(list->data))->data)->name,in[0]->u.str)) {
-              osd_odometer_reset(list->data);
-	          osd_odometer_draw(list->data,this,NULL);
-            }
-            list = g_list_next(list);
-          }
-	} 
+		GList* list = odometer_list;
+		struct odometer *odm;
+		while (list) {
+			odm = (struct odometer*) ((struct osd_priv_common *) (list->data))->data;
+			if (!strcmp(odm->name, in[0]->u.str)) {
+				double curr_time;
+				struct timeval tv;
+				gettimeofday(&tv, NULL);
+				curr_time = (double) (tv.tv_usec) / 1000000.0 + tv.tv_sec;
+				odm->last_click_time = curr_time;
+				osd_odometer_reset(list->data);
+				osd_odometer_draw(list->data, this, NULL);
+			}
+			list = g_list_next(list);
+		}
+	}
 }
 
 static char* 
@@ -777,17 +784,14 @@
 static void
 osd_odometer_reset(struct osd_priv_common *opc)
 {
-  struct odometer *this = (struct odometer *)opc->data;
+  struct odometer *this = (struct odometer *) opc->data;
 
-  if(!this->bDisableReset) {
-    this->bActive         = 0;
-    this->sum_dist        = 0;
-    this->sum_time        = 0;
-    this->max_speed       = 0;
-    this->last_start_time = 0;
-    this->last_coord.x    = -1;
-    this->last_coord.y    = -1;
-  }
+  this->sum_dist = 0;
+  this->sum_time = 0;
+  this->max_speed = 0;
+  this->last_start_time = 0;
+  this->last_coord.x = -1;
+  this->last_coord.y = -1;
 }
 
 static void
@@ -821,8 +825,9 @@
 
   this->bActive ^= 1;  //toggle active flag
 
-  if (curr_time-double_click_timewin <= this->last_click_time) { //double click handling
-    osd_odometer_reset(opc);
+  if (curr_time-double_click_timewin <= this->last_click_time && !this->bDisableReset) { //double click handling
+	  this->bActive = 0;
+	  osd_odometer_reset(opc);
   }
 
   this->last_click_time = curr_time;
